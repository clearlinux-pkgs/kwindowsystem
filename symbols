libKF6WindowSystem.so.6:KKeyServer::accelModMaskX()
libKF6WindowSystem.so.6:KKeyServer::initializeMods()
libKF6WindowSystem.so.6:KKeyServer::isShiftAsModifierAllowed(int)
libKF6WindowSystem.so.6:KKeyServer::keyQtToCodeXs(int)
libKF6WindowSystem.so.6:KKeyServer::keyQtToSymXs(int)
libKF6WindowSystem.so.6:KKeyServer::keyboardHasMetaKey()
libKF6WindowSystem.so.6:KKeyServer::modXAlt()
libKF6WindowSystem.so.6:KKeyServer::modXCtrl()
libKF6WindowSystem.so.6:KKeyServer::modXLock()
libKF6WindowSystem.so.6:KKeyServer::modXMeta()
libKF6WindowSystem.so.6:KKeyServer::modXModeSwitch()
libKF6WindowSystem.so.6:KKeyServer::modXNumLock()
libKF6WindowSystem.so.6:KKeyServer::modXScrollLock()
libKF6WindowSystem.so.6:KKeyServer::modXShift()
libKF6WindowSystem.so.6:KSelectionOwner::claimedOwnership()
libKF6WindowSystem.so.6:KSelectionOwner::failedToClaimOwnership()
libKF6WindowSystem.so.6:KSelectionOwner::filterEvent(void*)
libKF6WindowSystem.so.6:KSelectionOwner::filter_selection_request(void*)
libKF6WindowSystem.so.6:KSelectionOwner::getAtoms()
libKF6WindowSystem.so.6:KSelectionOwner::lostOwnership()
libKF6WindowSystem.so.6:KSelectionOwner::release()
libKF6WindowSystem.so.6:KSelectionOwner::timerEvent(QTimerEvent*)
libKF6WindowSystem.so.6:KSelectionOwner::~KSelectionOwner()
libKF6WindowSystem.so.6:KSelectionWatcher::filterEvent(void*)
libKF6WindowSystem.so.6:KSelectionWatcher::init()
libKF6WindowSystem.so.6:KSelectionWatcher::lostOwner()
libKF6WindowSystem.so.6:KSelectionWatcher::owner()
libKF6WindowSystem.so.6:KSelectionWatcher::~KSelectionWatcher()
libKF6WindowSystem.so.6:KStartupInfo::appStarted()
libKF6WindowSystem.so.6:KStartupInfo::createNewStartupId()
libKF6WindowSystem.so.6:KStartupInfo::customEvent(QEvent*)
libKF6WindowSystem.so.6:KStartupInfo::resetStartupEnv()
libKF6WindowSystem.so.6:KStartupInfo::~KStartupInfo()
libKF6WindowSystem.so.6:KStartupInfoData::KStartupInfoData()
libKF6WindowSystem.so.6:KStartupInfoData::addPid(int)
libKF6WindowSystem.so.6:KStartupInfoData::setDesktop(int)
libKF6WindowSystem.so.6:KStartupInfoData::setScreen(int)
libKF6WindowSystem.so.6:KStartupInfoData::setSilent(KStartupInfoData::TriState)
libKF6WindowSystem.so.6:KStartupInfoData::setXinerama(int)
libKF6WindowSystem.so.6:KStartupInfoData::~KStartupInfoData()
libKF6WindowSystem.so.6:KStartupInfoId::KStartupInfoId()
libKF6WindowSystem.so.6:KStartupInfoId::~KStartupInfoId()
libKF6WindowSystem.so.6:KUserTimestamp::userTimestamp()
libKF6WindowSystem.so.6:KWaylandExtras::KWaylandExtras()
libKF6WindowSystem.so.6:KWaylandExtras::exportWindow(QWindow*)
libKF6WindowSystem.so.6:KWaylandExtras::lastInputSerial(QWindow*)
libKF6WindowSystem.so.6:KWaylandExtras::self()
libKF6WindowSystem.so.6:KWaylandExtras::unexportWindow(QWindow*)
libKF6WindowSystem.so.6:KWaylandExtras::~KWaylandExtras()
libKF6WindowSystem.so.6:KWindowEffects::isEffectAvailable(KWindowEffects::Effect)
libKF6WindowSystem.so.6:KWindowEffectsPrivate::KWindowEffectsPrivate()
libKF6WindowSystem.so.6:KWindowEffectsPrivate::~KWindowEffectsPrivate()
libKF6WindowSystem.so.6:KWindowInfo::~KWindowInfo()
libKF6WindowSystem.so.6:KWindowShadow::KWindowShadow(QObject*)
libKF6WindowSystem.so.6:KWindowShadow::create()
libKF6WindowSystem.so.6:KWindowShadow::destroy()
libKF6WindowSystem.so.6:KWindowShadow::setBottomLeftTile(QSharedPointer<KWindowShadowTile>)
libKF6WindowSystem.so.6:KWindowShadow::setBottomRightTile(QSharedPointer<KWindowShadowTile>)
libKF6WindowSystem.so.6:KWindowShadow::setBottomTile(QSharedPointer<KWindowShadowTile>)
libKF6WindowSystem.so.6:KWindowShadow::setLeftTile(QSharedPointer<KWindowShadowTile>)
libKF6WindowSystem.so.6:KWindowShadow::setRightTile(QSharedPointer<KWindowShadowTile>)
libKF6WindowSystem.so.6:KWindowShadow::setTopLeftTile(QSharedPointer<KWindowShadowTile>)
libKF6WindowSystem.so.6:KWindowShadow::setTopRightTile(QSharedPointer<KWindowShadowTile>)
libKF6WindowSystem.so.6:KWindowShadow::setTopTile(QSharedPointer<KWindowShadowTile>)
libKF6WindowSystem.so.6:KWindowShadow::setWindow(QWindow*)
libKF6WindowSystem.so.6:KWindowShadow::~KWindowShadow()
libKF6WindowSystem.so.6:KWindowShadowPrivate::create()
libKF6WindowSystem.so.6:KWindowShadowPrivate::destroy()
libKF6WindowSystem.so.6:KWindowShadowPrivate::prepareTiles()
libKF6WindowSystem.so.6:KWindowShadowPrivate::~KWindowShadowPrivate()
libKF6WindowSystem.so.6:KWindowShadowTile::KWindowShadowTile()
libKF6WindowSystem.so.6:KWindowShadowTile::create()
libKF6WindowSystem.so.6:KWindowShadowTile::~KWindowShadowTile()
libKF6WindowSystem.so.6:KWindowShadowTilePrivate::~KWindowShadowTilePrivate()
libKF6WindowSystem.so.6:KWindowSystem::d_func()
libKF6WindowSystem.so.6:KWindowSystem::isPlatformWayland()
libKF6WindowSystem.so.6:KWindowSystem::isPlatformX11()
libKF6WindowSystem.so.6:KWindowSystem::platform()
libKF6WindowSystem.so.6:KWindowSystem::self()
libKF6WindowSystem.so.6:KWindowSystem::setShowingDesktop(bool)
libKF6WindowSystem.so.6:KWindowSystem::showingDesktop()
libKF6WindowSystem.so.6:KWindowSystem::showingDesktopChanged(bool)
libKF6WindowSystem.so.6:KWindowSystem::updateStartupId(QWindow*)
libKF6WindowSystem.so.6:KWindowSystemPluginInterface::KWindowSystemPluginInterface(QObject*)
libKF6WindowSystem.so.6:KWindowSystemPluginInterface::createEffects()
libKF6WindowSystem.so.6:KWindowSystemPluginInterface::createWindowShadow()
libKF6WindowSystem.so.6:KWindowSystemPluginInterface::createWindowShadowTile()
libKF6WindowSystem.so.6:KWindowSystemPluginInterface::createWindowSystem()
libKF6WindowSystem.so.6:KWindowSystemPluginInterface::~KWindowSystemPluginInterface()
libKF6WindowSystem.so.6:KWindowSystemPrivate::~KWindowSystemPrivate()
libKF6WindowSystem.so.6:KX11Extras::activeWindow()
libKF6WindowSystem.so.6:KX11Extras::compositingActive()
libKF6WindowSystem.so.6:KX11Extras::compositingChanged(bool)
libKF6WindowSystem.so.6:KX11Extras::currentDesktop()
libKF6WindowSystem.so.6:KX11Extras::currentDesktopChanged(int)
libKF6WindowSystem.so.6:KX11Extras::desktopName(int)
libKF6WindowSystem.so.6:KX11Extras::desktopNamesChanged()
libKF6WindowSystem.so.6:KX11Extras::mapViewport()
libKF6WindowSystem.so.6:KX11Extras::numberOfDesktops()
libKF6WindowSystem.so.6:KX11Extras::numberOfDesktopsChanged(int)
libKF6WindowSystem.so.6:KX11Extras::self()
libKF6WindowSystem.so.6:KX11Extras::setCurrentDesktop(int)
libKF6WindowSystem.so.6:KX11Extras::setShowingDesktop(bool)
libKF6WindowSystem.so.6:KX11Extras::showingDesktop()
libKF6WindowSystem.so.6:KX11Extras::stackingOrder()
libKF6WindowSystem.so.6:KX11Extras::stackingOrderChanged()
libKF6WindowSystem.so.6:KX11Extras::strutChanged()
libKF6WindowSystem.so.6:KX11Extras::windows()
libKF6WindowSystem.so.6:KX11Extras::workArea(int)
libKF6WindowSystem.so.6:KX11Extras::workAreaChanged()
libKF6WindowSystem.so.6:KXMessages::~KXMessages()
libKF6WindowSystem.so.6:NETRootInfo::activate()
libKF6WindowSystem.so.6:NETRootInfo::event(xcb_generic_event_t*)
libKF6WindowSystem.so.6:NETRootInfo::setDefaultProperties()
libKF6WindowSystem.so.6:NETRootInfo::setNumberOfDesktops(int)
libKF6WindowSystem.so.6:NETRootInfo::setShowingDesktop(bool)
libKF6WindowSystem.so.6:NETRootInfo::setSupported()
libKF6WindowSystem.so.6:NETRootInfo::~NETRootInfo()
libKF6WindowSystem.so.6:NETWinInfo::event(xcb_generic_event_t*)
libKF6WindowSystem.so.6:NETWinInfo::setAllowedActions(QFlags<NET::Action>)
libKF6WindowSystem.so.6:NETWinInfo::setBlockingCompositing(bool)
libKF6WindowSystem.so.6:NETWinInfo::setFrameExtents(NETStrut)
libKF6WindowSystem.so.6:NETWinInfo::setFrameOverlap(NETStrut)
libKF6WindowSystem.so.6:NETWinInfo::setFullscreenMonitors(NETFullscreenMonitors)
libKF6WindowSystem.so.6:NETWinInfo::setGtkFrameExtents(NETStrut)
libKF6WindowSystem.so.6:NETWinInfo::setHandledIcons(bool)
libKF6WindowSystem.so.6:NETWinInfo::setIconGeometry(NETRect)
libKF6WindowSystem.so.6:NETWinInfo::setOpacityF(double)
libKF6WindowSystem.so.6:NETWinInfo::setPid(int)
libKF6WindowSystem.so.6:NETWinInfo::setStrut(NETStrut)
libKF6WindowSystem.so.6:NETWinInfo::setWindowType(NET::WindowType)
libKF6WindowSystem.so.6:NETWinInfo::updateWMState()
libKF6WindowSystem.so.6:NETWinInfo::~NETWinInfo()
